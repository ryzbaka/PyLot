{"version":3,"sources":["SignInContext.js","Sidebar.js","Profile.jsx","Home.js","About.js","Signupin.js","Signup.js","ServerDetail.js","Logout.js","AddServer.jsx","Api.jsx","sketch.js","Notebook.jsx","Terminal.jsx","App.js","serviceWorker.js","index.js"],"names":["SignInContext","createContext","Sidebar","options","links","home","useContext","signInState","className","to","style","textDecoration","color","map","item","index","key","Profile","state","username","props","password","servers","loading","axios","post","this","then","data","setState","CircularProgress","Button","variant","startIcon","onClick","navigate","List","serverName","ipAddr","user","sshKey","ListItem","button","ListItemIcon","ListItemText","primary","secondary","Divider","Component","Home","src","alt","border","status","About","Signupin","useState","setUsername","setPassword","setSignInState","onSubmit","e","preventDefault","alert","formData","response","verifyDetails","htmlFor","id","onChange","event","target","value","type","Signup","password2","setPassword2","email","setEmail","firstName","setFirstName","lastName","setLastName","formElements","document","getElementById","elements","i","length","console","log","placeholder","ServerDetails","serverPassword","serverUser","columnNames","socketRunning","uptime","operatingSystem","memoryUsedPercent","cpuUsage","callBack","socket","openConnection","emit","window","location","href","on","receivedData","subscribeToSocket","err","health","Card","maxHeight","minHeight","CardContent","Typography","sName","prompt","Logout","AddServer","context","setServerName","setIpAddr","setServerPassword","setServerUser","verifyAndSendDetails","SocketApi","cb","JSON","stringify","sketch","p","noteBook","current","addTileButton","querySelector","removeTileButton","setOutputButton","saveNotebookButton","canvasWidth","windowWidth","canvasHeight","windowHeight","Tile","name","information","xPos","yPos","tileWidth","tileHeight","outputs","someTile","push","someTileName","splice","mouseIsPressed","leftWall","rightWall","bottomWall","topWall","mouseX","mouseY","strokeWeight","stroke","rectMode","CENTER","fill","rect","text","point","forEach","element","line","Notebook","tiles","tileNames","includes","newTile","show","nodeName","outputTileName","node","outputTile","addOutput","tileName","removeOutput","flushOutput","addEventListener","addTile","removeTile","tile1","tile2","setOutput","newName","setup","createCanvas","background","mouseReleased","draw","display","NotebookDisplay","Terminal","xtermRef","React","createRef","command","terminal","writeln","writeToTerminal","write","message","dataString","ref","onKey","domEvent","code","contextType","App","signedStateHook","StrictMode","Provider","path","ServerDetail","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.196cff52.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst SignInContext = createContext([[\"Signed Out\", \"None\", \"None\"], () => {}]);\n\nexport default SignInContext;\n","import React, { useContext } from \"react\";\nimport { Link } from \"@reach/router\";\nimport SignInContext from \"./SignInContext\";\n\nconst Sidebar = ({ options, links, home }) => {\n  const [signInState, setSignInState] = useContext(SignInContext);\n  if (signInState[0] !== \"Signed Out\" && home) {\n    return (\n      <div className=\"side-container-content\">\n        <Link to=\"/logout\" style={{ textDecoration: \"none\", color: \"white\" }}>\n          <p>Logout</p>\n        </Link>\n      </div>\n    );\n  }\n  return (\n    <div className=\"side-container-content\">\n      {options.map((item, index) => (\n        <Link\n          key={index}\n          to={links[index]}\n          style={{ textDecoration: \"none\", color: \"white\" }}\n        >\n          <p key={index}>{item}</p>\n        </Link>\n      ))}\n    </div>\n  );\n};\nexport default Sidebar;\n","import React,{Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport {navigate, Link} from \"@reach/router\";\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DnsIcon from '@material-ui/icons/Dns';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nclass Profile extends Component{\r\n    state = {username:this.props.username,password:this.props.password,servers:[],loading:true};\r\n    componentDidMount(){\r\n        axios.post(\"/users/getservers\",{\r\n            username:this.state.username,\r\n            password:this.state.password\r\n        }).then(({data})=>{\r\n            this.setState({servers:data,loading:false})\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.loading){\r\n            return (\r\n                <div className=\"serverDetailsPageMainContainer\">\r\n          <CircularProgress/>\r\n        </div>\r\n            )\r\n        }else{\r\n            const {servers} = this.state;\r\n            return (\r\n                <div className=\"server-page-container\">\r\n                    <div className=\"server-page-controls\">\r\n                        <h2>{this.state.username}'s Servers</h2>\r\n                        <Button\r\n                         variant=\"contained\"\r\n                         color=\"seagreen\"\r\n                         startIcon={<AddIcon/>}\r\n                         onClick={()=>{navigate(\"/addServer\")}}\r\n                        >\r\n                            Add Server\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"servers-container\">\r\n                        <List>\r\n                        {servers.map(({serverName,ipAddr,sshKey,user,password},index)=>{\r\n                            return (\r\n                            <Link key={index} to={`/serverDetails/${this.state.username}/${serverName}/${ipAddr}/${user}/${password}`} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <DnsIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={serverName} secondary={`${user} | ${ipAddr}`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            </Link>\r\n                            )\r\n                        })}\r\n                        </List>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Profile;","import React, { useContext } from \"react\";\nimport SignInContext from \"./SignInContext\";\nimport Profile from \"./Profile.jsx\";\nconst Home = () => {\n  const [signInState, setsignInState] = useContext(SignInContext);\n  //return <div>{signInState.status}</div>;\n  if (signInState[0] === \"Signed Out\") {\n    return (\n      <div className=\"banner-container\">\n        <img\n          src=\"https://i.ibb.co/27hZ9sY/image.png\"\n          alt=\"banner\"\n          border=\"0\"\n        ></img>\n        <p className=\"flow-text\">\n          A web based IDE for writing and scheduling ETL pipelines in Python\n        </p>\n      </div>\n    );\n  } else {\n    return (\n      <Profile\n        status={signInState[0]}\n        username={signInState[1]}\n        password={signInState[2]}\n      ></Profile>\n    );\n  }\n};\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return <div>About</div>;\n};\n\nexport default About;\n","import React, { useState, useContext } from \"react\";\nimport { Link, navigate } from \"@reach/router\";\nimport axios from \"axios\";\nimport SignInContext from \"./SignInContext\";\nconst Signupin = () => {\n  const [username, setUsername] = useState(\"username\");\n  const [password, setPassword] = useState(\"*******\");\n  const [signInState, setSignInState] = useContext(SignInContext);\n  function verifyDetails() {\n    if (username === \"\" || password === \"\") {\n      alert(\"Form missing information.\");\n    } else {\n      const formData = {\n        username: username,\n        password: password,\n      };\n      axios.post(\"/users/signin\", formData).then((response) => {\n        if (response.data === \"Authentication Successful\") {\n          setSignInState([\"Signed In\", username, password]);\n          navigate(\"/\");\n        } else {\n          alert(\"Authentication failed.\");\n        }\n      });\n    }\n  }\n  return (\n    <div className=\"form-page-container\">\n      <div className=\"form-container\">\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            verifyDetails();\n          }}\n        >\n          <label htmlFor=\"username\" className=\"teal-text text-accent-3\">\n            Username\n            <input\n              id=\"username\"\n              onChange={(event) => setUsername(event.target.value)}\n              className=\"teal-text text-accent-3\"\n            />\n          </label>\n          <label htmlFor=\"password\" className=\"teal-text text-accent-3\">\n            Password\n            <input\n              id=\"password\"\n              type=\"password\"\n              onChange={(event) => setPassword(event.target.value)}\n              className=\"teal-text text-accent-3\"\n            />\n          </label>\n          <button className=\"teal white-text accent-3\">submit</button>\n          <Link\n            to=\"/signup\"\n            style={{ textDecoration: \"none\", color: \"#4c5357\" }}\n          >\n            <span className=\"teal-text text-accent-3\">Sign Up</span>\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signupin;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nconst Signup = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  function verifyDetails() {\n    if (password !== password2) {\n      alert(\"Passwords do not match.\");\n    } else {\n      const signUpForm = document.getElementById(\"sign-up-form\");\n      const formElements = signUpForm.elements;\n      for (let i = 0; i < formElements.length - 1; i++) {\n        if (formElements[i].value === \"\") {\n          alert(\"Form incomplete!\");\n          return 0;\n        }\n      }\n      const formData = {\n        firstName: firstName,\n        lastName: lastName,\n        username: username,\n        password: password,\n        email: email,\n        servers: [],\n      };\n      console.log(\"sending post request\");\n      axios\n        .post(\"/users/signup\", formData)\n        .then((response) => alert(response.data));\n    }\n  }\n  return (\n    <div className=\"form-container\">\n      <form\n        id=\"sign-up-form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          verifyDetails();\n        }}\n      >\n        <label htmlFor=\"first-name\" className=\"teal-text text-accent-3\">\n          First Name\n          <input\n            id=\"first-name\"\n            value={firstName}\n            placeholder=\"First Name\"\n            onChange={(event) => setFirstName(event.target.value)}\n            className=\"teal-text text-accent-3\"\n          />\n        </label>\n        <label htmlFor=\"last-name\" className=\"teal-text text-accent-3\">\n          Last Name\n          <input\n            id=\"last-name\"\n            value={lastName}\n            placeholder=\"Last Name\"\n            onChange={(event) => setLastName(event.target.value)}\n            className=\"teal-text text-accent-3\"\n          />\n        </label>\n        <label htmlFor=\"username\" className=\"teal-text text-accent-3\">\n          Username\n          <input\n            id=\"username\"\n            value={username}\n            placeholder=\"username\"\n            onChange={(event) => setUsername(event.target.value)}\n            className=\"teal-text text-accent-3\"\n          />\n        </label>\n        <label htmlFor=\"email\" className=\"teal-text text-accent-3\">\n          E-mail\n          <input\n            id=\"email\"\n            value={email}\n            placeholder=\"email\"\n            onChange={(event) => setEmail(event.target.value)}\n            className=\"teal-text text-accent-3\"\n          />\n        </label>\n        <label htmlFor=\"password\" className=\"teal-text text-accent-3\">\n          Password\n          <input\n            id=\"password\"\n            placeholder=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n            className=\"teal-text text-accent-3\"\n          />\n        </label>\n        <label htmlFor=\"password2\" className=\"teal-text text-accent-3\">\n          Re-Type Password\n          <input\n            id=\"password2\"\n            placeholder=\"retype password\"\n            type=\"password\"\n            value={password2}\n            onChange={(event) => setPassword2(event.target.value)}\n            className=\"teal-text text-accent-3\"\n          />\n        </label>\n        <button className=\"teal accent-3\">\n          <span className=\"white-text\">submit</span>\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default Signup;\n","/* eslint-disable no-useless-constructor */\nimport React, { Component, setState } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { navigate } from \"@reach/router\";\nimport openConnection from \"socket.io-client\";\n\nfunction subscribeToSocket(ipAddr, callBack) {\n  const socket = openConnection(`http://${ipAddr}:5000/`);\n  socket.emit(\"get-health\", window.location.href);\n  socket.on(\"send-health\", (receivedData) => callBack(null, receivedData));\n}\n\nclass ServerDetails extends Component {\n  constructor(props) {\n    super(props);\n    subscribeToSocket(this.state.ipAddr, (err, receivedData) => {\n      this.setState({ data: receivedData, socketRunning: true });\n    });\n  }\n  state = {\n    password: this.props.serverPassword,\n    user: this.props.serverUser,\n    username: this.props.username,\n    serverName: this.props.serverName,\n    ipAddr: this.props.ipAddr,\n    columnNames: [],\n    loading: false,\n    socketRunning: false,\n    data: {\n      uptime: \"🤷‍\",\n      operatingSystem: \"🤷‍♂️\",\n      memoryUsedPercent: \"🤷‍\",\n      cpuUsage: \"🤷‍♂️\",\n    },\n  };\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"serverDetailsPageMainContainer \">\n          <CircularProgress />\n        </div>\n      );\n    } else {\n      const { serverName, username, socketRunning } = this.state;\n      function RemoveServer() {\n        const sName = prompt(\n          \"Please enter name of the server to continue server deletion.\"\n        );\n        if (sName === serverName) {\n          axios\n            .post(\"/users/removeserver\", {\n              username: username,\n              serverName: sName,\n            })\n            .then((response) => {\n              if (\n                response.data ===\n                `Server : ${serverName} was deleted successfully.`\n              ) {\n                alert(\"Server deleted successfully.\");\n                navigate(\"/\");\n              } else {\n                alert(\"Failed to delete server.[Internal Issue]\");\n              }\n            });\n        } else {\n          alert(\"Did not delete server.\");\n        }\n      }\n      function startHealthReportingService() {\n        if (socketRunning) {\n          alert(\"Health reporting service already running on remote server.\");\n        } else {\n          const data = {\n            username: username,\n            serverName: serverName,\n          };\n          axios.post(\"/health/setupserver\", data).then((response) => {\n            console.log(response);\n            alert(\"Done.\");\n          });\n        }\n      }\n      function openTerminal() {\n        // alert(`Open new window to ${ipAddr}`)\n        navigate(`/terminal/${username}/${serverName}`);\n      }\n      function openNotebook() {\n        navigate(\"/notebook\");\n      }\n      const { ipAddr } = this.state;\n      const healthData = this.state.health;\n        return (\n          <Card style={{ maxHeight: \"30%\", minHeight: \"50%\" }}>\n            <CardContent>\n              <Typography variant=\"h5\">{this.state.serverName}</Typography>\n              <Typography>{this.state.data.operatingSystem}</Typography>\n              <Typography>User: {this.state.user}</Typography>\n              <Typography>Uptime: {this.state.data.uptime}</Typography>\n              <Typography>{this.state.data.cpuUsage}💻</Typography>\n              <Typography>\n                Memory Usage: {this.state.data.memoryUsedPercent}🐏\n              </Typography>\n              <Typography>\n                {this.state.socketRunning\n                  ? \"Health Reporting Service is online 🩺\"\n                  : \"Health reporting service is offline on remote server 😢\"}\n              </Typography>\n              <p\n                className=\"waves-effect btn remove-server teal accent-3\"\n                onClick={RemoveServer}\n              >\n                REMOVE SERVER\n              </p>\n              <p\n                className=\"waves-effect btn remove-server teal accent-3\"\n                onClick={startHealthReportingService}\n              >\n                Setup Health Reporting Service\n              </p>\n              <p\n                className=\"waves-effect btn remove-server teal accent-3\"\n                onClick={openTerminal}\n              >\n                Open Terminal\n              </p>\n              <p\n                className=\"waves-effect btn remove-server teal accent-3\"\n                onClick={openNotebook}\n              >\n                Open Notebook\n              </p>\n            </CardContent>\n          </Card>\n        );\n      \n    }\n  }\n}\n\nexport default ServerDetails;\n","import React, { useContext } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport SignInContext from \"./SignInContext\";\n\nconst Logout = () => {\n  const [signInState, setSignInState] = useContext(SignInContext);\n  if (signInState[0] === \"Signed In\") {\n    setSignInState([\"Signed Out\", \"None\", \"None\"]);\n    navigate(\"/\");\n    return <h1>Signing out</h1>;\n  } else {\n    return <h1>Signed Out</h1>;\n  }\n};\n\nexport default Logout;\n","import React,{useContext,useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {navigate} from \"@reach/router\"\r\nimport SignInContext from \"./SignInContext\";\r\n\r\nconst AddServer=()=>{\r\n    const [context,setSignInstate]=useContext(SignInContext);\r\n    const [serverName,setServerName]=useState(\"\");\r\n    const [ipAddr,setIpAddr]=useState(\"\");\r\n    const [sshKey,setSSH]=useState(false);\r\n    const [serverPassword,setServerPassword]=useState(\"\")\r\n    const [serverUser,setServerUser]=useState(\"\")\r\n    function verifyAndSendDetails(){\r\n        const ssh=false;\r\n        const formData={\r\n            username:context[1],\r\n            serverName:serverName,\r\n            ipAddr:ipAddr,\r\n            sshKey:ssh,\r\n            user:serverUser,\r\n            password:serverPassword\r\n        }\r\n        axios.post(\"/users/addserver\",formData).then((response)=>{\r\n            if(response.data===\"Added server.\"){\r\n                navigate('/')\r\n            }else{\r\n                alert(\"An error ocurred\");\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form\r\n             onSubmit={(e)=>{\r\n                 e.preventDefault();\r\n                 verifyAndSendDetails()\r\n             }}\r\n            >\r\n                <label htmlFor=\"serverName\" className=\"teal-text text-accent-3\">\r\n                Server Name\r\n                <input \r\n                    id=\"serverName\"\r\n                    onChange={(event)=>setServerName(event.target.value)}\r\n                    className=\"teal-text text-accent-3\"\r\n                />\r\n                </label>\r\n                <label htmlFor=\"ipAddress\" className=\"teal-text text-accent-3\">\r\n                IP Address\r\n                <input \r\n                    id=\"ipAddress\"\r\n                    onChange={(event)=>setIpAddr(event.target.value)}\r\n                    className=\"teal-text text-accent-3\"\r\n                />\r\n                </label>\r\n                <label htmlFor=\"serverUser\" className=\"teal-text text-accent-3\">\r\n                User account on server\r\n                <input \r\n                    id=\"serverUser\"\r\n                    onChange={(event)=>setServerUser(event.target.value)}\r\n                    className=\"teal-text text-accent-3\"\r\n                />\r\n                </label>\r\n                <label htmlFor=\"serverPassword\" className=\"teal-text text-accent-3\">\r\n                Password for server user account\r\n                <input \r\n                    id=\"serverPassword\"\r\n                    onChange={(event)=>setServerPassword(event.target.value)}\r\n                    className=\"teal-text text-accent-3\"\r\n                />\r\n                </label>\r\n                <button className=\"teal accent-3\"><span className=\"white-text\">submit</span></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default AddServer;","import React,{Component} from \"react\";\r\nimport openConnection from \"socket.io-client\";\r\n\r\nfunction subscribeToSocket(ipAddr,cb){\r\n    let socket=openConnection(`http://${ipAddr}:5000`);\r\n    socket.emit('get-health',null);\r\n    socket.on('send-health',receivedData=>cb(null,receivedData));\r\n}\r\n\r\nclass SocketApi extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        subscribeToSocket(\"167.71.237.73\",(err,receivedData)=>{\r\n            this.setState({\r\n                data:receivedData\r\n            })\r\n        });\r\n    }\r\n    state={\r\n        data:\"No data received from websocket\"\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Socket Test</h1>\r\n                <h2>Socket data:{JSON.stringify(this.state.data)}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SocketApi;","const sketch = (p) => {\n  let current = \"None\";\n  const addTileButton = document.querySelector(\"#add-tile-button\");\n  const removeTileButton = document.querySelector(\"#remove-tile-button\");\n  const setOutputButton = document.querySelector(\"#set-output-button\");\n  const saveNotebookButton = document.querySelector(\"#save-notebook\");\n  let noteBook;\n  let canvasWidth = p.windowWidth / 1.12;\n  let canvasHeight = p.windowHeight / 1.7;\n  class Tile {\n    constructor(name, canvasWidth, canvasHeight) {\n      this.information = {\n        name: name,\n        canvasWidth: canvasWidth,\n        canvasHeight: canvasHeight,\n        xPos: canvasWidth / 2,\n        yPos: canvasHeight / 2,\n        tileWidth: canvasWidth / 10,\n        tileHeight: canvasHeight / 10,\n        outputs: [],\n      };\n    }\n\n    addOutput(someTile) {\n      this.information.outputs.push(someTile);\n    }\n    removeOutput(someTileName) {\n      for (let i = 0; i < this.information.outputs.length; i++) {\n        if (this.information.outputs[i].information.name === someTileName) {\n          this.information.outputs.splice(i, 1);\n        }\n      }\n    }\n    flushOutput() {\n      this.information.outputs = [];\n    }\n    show() {\n      if (\n        p.mouseIsPressed &&\n        (current === \"None\" || current === this.information.name)\n      ) {\n        const { tileWidth, tileHeight, xPos, yPos } = this.information;\n        const leftWall = xPos - tileWidth / 2;\n        const rightWall = xPos + tileWidth / 2;\n        const bottomWall = yPos + tileHeight / 2;\n        const topWall = yPos - tileHeight / 2;\n        if (\n          p.mouseX > leftWall &&\n          p.mouseX < rightWall &&\n          p.mouseY < bottomWall &&\n          p.mouseY > topWall\n        ) {\n          current = this.information.name;\n          this.information.xPos = p.mouseX;\n          this.information.yPos = p.mouseY;\n          p.strokeWeight(5);\n          p.stroke(\"green\");\n        }\n      }\n      const {\n        name,\n        xPos,\n        yPos,\n        canvasWidth,\n        canvasHeight,\n        tileWidth,\n        tileHeight,\n      } = this.information;\n      p.rectMode(p.CENTER);\n      p.fill(\"#42f5bf\"); //teal fill for tile\n      p.rect(xPos, yPos, tileWidth, tileHeight);\n      p.stroke(\"black\");\n      p.strokeWeight(1);\n      p.text(name, xPos - 20, yPos);\n      p.point(xPos, yPos);\n      const { outputs } = this.information;\n      p.stroke(\"white\");\n      if (outputs.length > 0) {\n        outputs.forEach((element, index) => {\n          p.line(\n            xPos + tileWidth / 2,\n            yPos,\n            element.information.xPos - tileWidth / 2,\n            element.information.yPos\n          );\n        });\n      }\n    }\n  }\n\n  class Notebook {\n    constructor() {\n      this.name = \"Untitled-Notebook\";\n      this.tiles = [];\n      this.tileNames = [];\n    }\n\n    addTile(name, canvasWidth, canvasHeight) {\n      if (this.tileNames.includes(name)) {\n        alert(\"Tile already exists, cannot create tile.\");\n      } else {\n        const newTile = new Tile(name, canvasWidth, canvasHeight);\n        this.tiles.push(newTile);\n        this.tileNames.push(name);\n      }\n    }\n\n    display() {\n      this.tiles.forEach((element, index) => {\n        element.show();\n      });\n    }\n\n    setOutput(nodeName, outputTileName) {\n      let node;\n      let outputTile;\n      for (let i = 0; i < this.tiles.length; i++) {\n        if (this.tiles[i].information.name === nodeName) {\n          node = this.tiles[i];\n        } else if (this.tiles[i].information.name === outputTileName) {\n          outputTile = this.tiles[i];\n        }\n      }\n      node.addOutput(outputTile);\n    }\n\n    removeTile(tileName) {\n      if (!this.tileNames.includes(tileName)) {\n        alert(\"Tile does not exist.\");\n      } else {\n        this.tiles.forEach((element, index) => {\n          element.removeOutput(tileName);\n        });\n        for (let i = 0; i < this.tiles.length; i++) {\n          if (this.tiles[i].information.name === tileName) {\n            this.tiles[i].flushOutput();\n            this.tiles.splice(i, 1);\n            this.tileNames.splice(i, 1);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  addTileButton.addEventListener(\"click\", () => {\n    const name = prompt();\n    noteBook.addTile(name, canvasWidth, canvasHeight);\n  });\n  removeTileButton.addEventListener(\"click\", () => {\n    const name = prompt();\n    noteBook.removeTile(name, canvasWidth, canvasHeight);\n  });\n  setOutputButton.addEventListener(\"click\", () => {\n    const tile1 = prompt(\"Enter name of input tile:\");\n    const tile2 = prompt(\"Enter name of output tile:\");\n    if (\n      !noteBook.tileNames.includes(tile1) ||\n      !noteBook.tileNames.includes(tile2)\n    ) {\n      alert(\"One of the two tile names entered does not exist.\");\n    } else {\n      noteBook.setOutput(tile1, tile2);\n    }\n  });\n  saveNotebookButton.addEventListener(\"click\", () => {\n    while (noteBook.name === \"Untitled-Notebook\" || noteBook.name == null) {\n      const newName = prompt(\"Please enter name for notebook:\");\n      noteBook.name = newName;\n    }\n    console.log(noteBook);\n  });\n  p.setup = () => {\n    p.createCanvas(canvasWidth, canvasHeight);\n    p.background(\"grey\");\n  };\n  p.mouseReleased = () => {\n    current = \"None\";\n  };\n  p.draw = () => {\n    p.background(220);\n    noteBook.display();\n  };\n  noteBook = new Notebook();\n};\nexport default sketch;\n","/* eslint-disable no-useless-constructor */\r\nimport React, {Component} from \"react\";\r\nimport P5Wrapper from \"react-p5-wrapper\";\r\nimport sketch from \"./sketch.js\";\r\n\r\nclass NotebookDisplay extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"notebook-container\">\r\n                <h3 className=\"teal-text text-accent-3\">Notebook</h3>\r\n                <button id=\"add-tile-button\">Add tile</button>\r\n                <button id=\"remove-tile-button\">Remove tile</button>\r\n                <button id=\"set-output-button\">Set Output</button>\r\n                <button id=\"save-notebook\">Save Notebook</button>\r\n                <P5Wrapper sketch={sketch} ></P5Wrapper>\r\n                <div className=\"tile-info\">\r\n                    <p id=\"tile-name\"></p>\r\n                    <p></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NotebookDisplay;","/* eslint-disable no-useless-constructor */\r\nimport React, {Component,useContext} from \"react\";\r\nimport {XTerm} from 'xterm-for-react';\r\nimport openConnection from \"socket.io-client\";\r\nimport SignInContext from \"./SignInContext\";\r\nimport axios from 'axios';\r\nclass Terminal extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.xtermRef = React.createRef();\r\n        this.state={\r\n            command:\"\",\r\n            username:this.props.username,\r\n            serverName:this.props.serverName\r\n        }\r\n    };\r\n    static contextType=SignInContext;//the sign in context can now be accessed using this.context\r\n    componentDidMount(){\r\n        \r\n        this.xtermRef.current.terminal.writeln(\"Welcome to PyLot terminal\");\r\n        axios.post(\"/getIp\",{\r\n            username:this.state.username,\r\n            serverName:this.state.serverName\r\n        }).then(({data})=>{\r\n            console.log(data)\r\n            if(typeof data===\"string\"){\r\n                const socket = openConnection(`http://${data}:5000/`)\r\n                this.state.socket = socket;\r\n                socket.on('connect',()=>{\r\n                    this.writeToTerminal('\\x1B[1;1;32m***Connected to PyLot terminal runtime ✈ ***\\x1B[0m \\n\\r')\r\n                });\r\n                socket.on('disconnect',()=>{\r\n                    this.writeToTerminal('\\x1B[1;3;31m***Disconnected from PyLot terminal runtime ☠ ***\\x1B[0m \\n\\r')     \r\n                })\r\n                socket.on('send-output',data=>{\r\n                    this.xtermRef.current.terminal.write(data)\r\n                })\r\n            }else{\r\n                alert(data.message)\r\n            }\r\n        })\r\n        // const socket = openConnection(\"http://167.71.237.73:5550/\");\r\n        // this.state.socket = socket;\r\n        // socket.on('connect',()=>{\r\n        //     this.writeToTerminal('\\x1B[1;1;32m***Connected to PyLot terminal runtime ✈ ***\\x1B[0m \\n\\r')\r\n        // })\r\n        // socket.on('disconnect',()=>{\r\n        //     this.writeToTerminal('\\x1B[1;3;31m***Disconnected from PyLot terminal runtime ☠ ***\\x1B[0m \\n\\r')\r\n        // })\r\n        // socket.on('send-output',data=>{\r\n        //     this.xtermRef.current.terminal.write(data)\r\n        // })\r\n    }\r\n    writeToTerminal(dataString){\r\n        this.xtermRef.current.terminal.writeln('\\n\\r'+dataString)\r\n    }\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"terminal-container\">\r\n                <XTerm ref={this.xtermRef} onKey={({key,domEvent})=>{\r\n                    \r\n                        if(domEvent.code===\"Enter\"){\r\n                            console.log(this.state);\r\n                            this.xtermRef.current.terminal.writeln(\"\");\r\n                            this.state.socket.emit('run-command',this.state.command);\r\n                            this.state.command=\"\";\r\n                        }else{\r\n                            this.state.command+=key\r\n                            this.xtermRef.current.terminal.write(key)\r\n                        }\r\n                }}\r\n                />\r\n            </div>\r\n        )\r\n    }    \r\n}\r\nexport default Terminal;\r\n","import React, { useState, useContext } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport { Router } from \"@reach/router\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Signupin from \"./Signupin\";\nimport Signup from \"./Signup\";\nimport SignInContext from \"./SignInContext\";\nimport ServerDetails from \"./ServerDetail.js\";\nimport Logout from \"./Logout.js\";\nimport AddServer from \"./AddServer\";\nimport SocketApi from \"./Api.jsx\";\nimport NotebookDisplay from \"./Notebook.jsx\";\nimport Terminal from \"./Terminal.jsx\";\n\nconst App = () => {\n  const signedStateHook = useState([\"Signed Out\", \"None\", \"None\"]); //maybe add a dictionary similar to the one in SignInContext.js\n  const [signInState, setSignInState] = useContext(SignInContext);\n  return (\n    <React.StrictMode>\n      <SignInContext.Provider value={signedStateHook}>\n        <div className=\"main-container\">\n          <div className=\"side-container\">\n            <Router>\n              <Sidebar\n                options={[\"Home\", \"Sign In\"]}\n                links={[\"/\", \"/signupin\"]}\n                path=\"/signup\"\n              />\n              <Sidebar options={[\"Home\"]} links={[\"/\"]} path=\"/signupin\" />\n              <Sidebar\n                options={[\"Sign Up / Sign In\"]}\n                links={[\"/signupin\"]}\n                home={true}\n                path=\"/\"\n              />\n              <Sidebar\n                options={[\"Home\"]}\n                links={[\"/\"]}\n                path=\"/serverDetails/*\"\n              />\n              <Sidebar options={[\"Home\"]} links={[\"/\"]} path=\"/addServer\" />\n              <Sidebar options={[\"Home\"]} links={[\"/\"]} path=\"/notebook\" />\n              <Sidebar options={[\"Home\"]} links={[\"/\"]} path=\"/terminal/*\" />\n            </Router>\n          </div>\n          <div className=\"nested-main-container\">\n            <Router>\n              <Home path=\"/\" />\n              <About path=\"/about\" />\n              <Signupin path=\"/signupin\" />\n              <Signup path=\"/signup\" />\n              <ServerDetails path=\"/serverDetails/:username/:serverName/:ipAddr/:serverUser/:serverPassword\" />\n              <Logout path=\"/logout\" />\n              <AddServer path=\"/addServer\" />\n              <SocketApi path=\"/testSocket\" />\n              <NotebookDisplay path=\"/notebook\" />\n              <Terminal path=\"/terminal/:username/:serverName\" />\n            </Router>\n          </div>\n        </div>\n      </SignInContext.Provider>\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}